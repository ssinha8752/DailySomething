Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 


ANS = /**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number}
 */
var findMedianSortedArrays = function(nums1, nums2) {
  let c=nums1+nums2;
  let result=c.split("").filter((item) => item!==",").reduce((acc, current, index, array) => {
    if (current === '-') {
        acc.push(-parseInt(array[index + 1]));
    } else if (!isNaN(parseInt(current))) {
        if (array[index - 1] !== '-') {
            acc.push(parseInt(current));
        }
    }
    return acc;
}, []);
  result=result.map((item) => Number(item));
  result.sort((a,b)=>a-b)
  let len=result.length;
  if(len%2===0)
  {
    return (result[len/2]+result[(len/2)-1])/2; 
  }
    else
    return result[Math.floor(len/2)];
};